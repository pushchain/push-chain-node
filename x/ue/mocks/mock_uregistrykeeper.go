// Code generated by MockGen. DO NOT EDIT.
// Source: x/ue/types/expected_keepers.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	uregistrytypes "github.com/rollchains/pchain/x/uregistry/types"
)

// MockUregistryKeeper is a mock of UregistryKeeper interface.
type MockUregistryKeeper struct {
	ctrl     *gomock.Controller
	recorder *MockUregistryKeeperMockRecorder
}

// MockUregistryKeeperMockRecorder is the mock recorder for MockUregistryKeeper.
type MockUregistryKeeperMockRecorder struct {
	mock *MockUregistryKeeper
}

// NewMockUregistryKeeper creates a new mock instance.
func NewMockUregistryKeeper(ctrl *gomock.Controller) *MockUregistryKeeper {
	mock := &MockUregistryKeeper{ctrl: ctrl}
	mock.recorder = &MockUregistryKeeperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUregistryKeeper) EXPECT() *MockUregistryKeeperMockRecorder {
	return m.recorder
}

// GetChainConfig mocks base method.
func (m *MockUregistryKeeper) GetChainConfig(ctx context.Context, chain string) (uregistrytypes.ChainConfig, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetChainConfig", ctx, chain)
	ret0, _ := ret[0].(uregistrytypes.ChainConfig)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetChainConfig indicates an expected call of GetChainConfig.
func (mr *MockUregistryKeeperMockRecorder) GetChainConfig(ctx, chain interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetChainConfig", reflect.TypeOf((*MockUregistryKeeper)(nil).GetChainConfig), ctx, chain)
}
