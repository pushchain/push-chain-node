syntax = "proto3";
package utv.v1;

import "google/api/annotations.proto";
import "utv/v1/genesis.proto";
import "utv/v1/types.proto";

option go_package = "github.com/pushchain/push-chain-node/x/utv/types";

// Query provides defines the gRPC querier service.
service Query {
  // Params queries all parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/utv/v1/params";
  }

  // VerifiedTxHash queries if a transaction hash is verified on a specific chain.
  rpc VerifiedTxHash(QueryVerifiedTxHashRequest) returns (QueryVerifiedTxHashResponse) {
    option (google.api.http).get = "/utv/v1/verified_tx_hash/{chain}/{tx_hash}";
  }
}

// QueryParamsRequest is the request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is the response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params defines the parameters of the module.
  Params params = 1;
}

// QueryVerifiedTxHashRequest is the request type for querying if a transaction hash is verified.
message QueryVerifiedTxHashRequest {
  // chain is the identifier of the chain to query.
  string chain = 1; 

  // hash is the hash of the transaction to query.
  string tx_hash = 2;
}

// QueryVerifiedTxHashResponse is the response type for the Query/VerifiedTxHash RPC method.
message QueryVerifiedTxHashResponse {
  // metadata contains full details if the transaction hash is verified.
  VerifiedTxMetadata metadata = 1;

  // found indicates whether the tx was found in the store.
  bool found = 2;
}