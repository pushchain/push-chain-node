FROM local-multi-validator-base:latest AS core-builder

# Copy source code in order of change frequency (most stable first)
COPY Makefile ./
COPY contrib/ ./contrib/
COPY api/ ./api/
COPY precompiles/ ./precompiles/
COPY types/ ./types/
COPY utils/ ./utils/
COPY x/ ./x/
COPY app/ ./app/
# Copy cmd/ last as it changes most frequently (especially main.go)
COPY cmd/ ./cmd/

# Build ONLY pchaind binary with build cache mount for faster incremental builds
RUN --mount=type=cache,target=/root/.cache/go-build \
    --mount=type=cache,target=/go/pkg/mod \
    LEDGER_ENABLED=false BUILD_TAGS=muslc LINK_STATICALLY=true go build \
  -mod=readonly -tags "netgo,muslc" \
  -ldflags '-X github.com/cosmos/cosmos-sdk/version.Name=pchain -X github.com/cosmos/cosmos-sdk/version.AppName=pchaind -X github.com/cosmos/cosmos-sdk/version.ClientName=puniversald -X github.com/cosmos/cosmos-sdk/version.Version=- -X github.com/cosmos/cosmos-sdk/version.Commit= -X "github.com/cosmos/cosmos-sdk/version.BuildTags=netgo,muslc" -s -w -linkmode=external -extldflags "-Wl,-z,muldefs -static"' \
  -trimpath -o build/pchaind ./cmd/pchaind \
  && file /code/build/pchaind \
  && echo "Ensuring pchaind is statically linked ..." \
  && (file /code/build/pchaind | grep "statically linked")

# --------------------------------------------------------
# Final stage - lightweight runtime image
FROM alpine:3.21

# Copy ONLY pchaind binary
COPY --from=core-builder /code/build/pchaind /usr/bin/pchaind

# Install runtime dependencies
RUN apk add --no-cache ca-certificates curl make bash jq sed

WORKDIR /opt

# Copy setup scripts for both genesis and regular validator setup
COPY local-multi-validator/scripts/ /opt/scripts/

# Expose ports for core validators (RPC, GRPC, P2P, WebSocket)
EXPOSE 1317 26656 26657 26658 26659 8545 8546 8548 8550 9090 9091 9092

CMD ["/usr/bin/pchaind", "version"]