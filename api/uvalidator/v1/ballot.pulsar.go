// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package uvalidatorv1

import (
	_ "cosmossdk.io/api/amino"
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var _ protoreflect.List = (*_Ballot_3_list)(nil)

type _Ballot_3_list struct {
	list *[]string
}

func (x *_Ballot_3_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_Ballot_3_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_Ballot_3_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_Ballot_3_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_Ballot_3_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message Ballot at list field EligibleVoters as it is not of Message kind"))
}

func (x *_Ballot_3_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_Ballot_3_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_Ballot_3_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_Ballot_4_list)(nil)

type _Ballot_4_list struct {
	list *[]VoteResult
}

func (x *_Ballot_4_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_Ballot_4_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfEnum((protoreflect.EnumNumber)((*x.list)[i]))
}

func (x *_Ballot_4_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Enum()
	concreteValue := (VoteResult)(valueUnwrapped)
	(*x.list)[i] = concreteValue
}

func (x *_Ballot_4_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Enum()
	concreteValue := (VoteResult)(valueUnwrapped)
	*x.list = append(*x.list, concreteValue)
}

func (x *_Ballot_4_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message Ballot at list field Votes as it is not of Message kind"))
}

func (x *_Ballot_4_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_Ballot_4_list) NewElement() protoreflect.Value {
	v := 0
	return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(v))
}

func (x *_Ballot_4_list) IsValid() bool {
	return x.list != nil
}

var (
	md_Ballot                      protoreflect.MessageDescriptor
	fd_Ballot_id                   protoreflect.FieldDescriptor
	fd_Ballot_ballot_type          protoreflect.FieldDescriptor
	fd_Ballot_eligible_voters      protoreflect.FieldDescriptor
	fd_Ballot_votes                protoreflect.FieldDescriptor
	fd_Ballot_voting_threshold     protoreflect.FieldDescriptor
	fd_Ballot_status               protoreflect.FieldDescriptor
	fd_Ballot_block_height_created protoreflect.FieldDescriptor
	fd_Ballot_block_height_expiry  protoreflect.FieldDescriptor
)

func init() {
	file_uvalidator_v1_ballot_proto_init()
	md_Ballot = File_uvalidator_v1_ballot_proto.Messages().ByName("Ballot")
	fd_Ballot_id = md_Ballot.Fields().ByName("id")
	fd_Ballot_ballot_type = md_Ballot.Fields().ByName("ballot_type")
	fd_Ballot_eligible_voters = md_Ballot.Fields().ByName("eligible_voters")
	fd_Ballot_votes = md_Ballot.Fields().ByName("votes")
	fd_Ballot_voting_threshold = md_Ballot.Fields().ByName("voting_threshold")
	fd_Ballot_status = md_Ballot.Fields().ByName("status")
	fd_Ballot_block_height_created = md_Ballot.Fields().ByName("block_height_created")
	fd_Ballot_block_height_expiry = md_Ballot.Fields().ByName("block_height_expiry")
}

var _ protoreflect.Message = (*fastReflection_Ballot)(nil)

type fastReflection_Ballot Ballot

func (x *Ballot) ProtoReflect() protoreflect.Message {
	return (*fastReflection_Ballot)(x)
}

func (x *Ballot) slowProtoReflect() protoreflect.Message {
	mi := &file_uvalidator_v1_ballot_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_Ballot_messageType fastReflection_Ballot_messageType
var _ protoreflect.MessageType = fastReflection_Ballot_messageType{}

type fastReflection_Ballot_messageType struct{}

func (x fastReflection_Ballot_messageType) Zero() protoreflect.Message {
	return (*fastReflection_Ballot)(nil)
}
func (x fastReflection_Ballot_messageType) New() protoreflect.Message {
	return new(fastReflection_Ballot)
}
func (x fastReflection_Ballot_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_Ballot
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_Ballot) Descriptor() protoreflect.MessageDescriptor {
	return md_Ballot
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_Ballot) Type() protoreflect.MessageType {
	return _fastReflection_Ballot_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_Ballot) New() protoreflect.Message {
	return new(fastReflection_Ballot)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_Ballot) Interface() protoreflect.ProtoMessage {
	return (*Ballot)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_Ballot) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Id != "" {
		value := protoreflect.ValueOfString(x.Id)
		if !f(fd_Ballot_id, value) {
			return
		}
	}
	if x.BallotType != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.BallotType))
		if !f(fd_Ballot_ballot_type, value) {
			return
		}
	}
	if len(x.EligibleVoters) != 0 {
		value := protoreflect.ValueOfList(&_Ballot_3_list{list: &x.EligibleVoters})
		if !f(fd_Ballot_eligible_voters, value) {
			return
		}
	}
	if len(x.Votes) != 0 {
		value := protoreflect.ValueOfList(&_Ballot_4_list{list: &x.Votes})
		if !f(fd_Ballot_votes, value) {
			return
		}
	}
	if x.VotingThreshold != int64(0) {
		value := protoreflect.ValueOfInt64(x.VotingThreshold)
		if !f(fd_Ballot_voting_threshold, value) {
			return
		}
	}
	if x.Status != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.Status))
		if !f(fd_Ballot_status, value) {
			return
		}
	}
	if x.BlockHeightCreated != int64(0) {
		value := protoreflect.ValueOfInt64(x.BlockHeightCreated)
		if !f(fd_Ballot_block_height_created, value) {
			return
		}
	}
	if x.BlockHeightExpiry != int64(0) {
		value := protoreflect.ValueOfInt64(x.BlockHeightExpiry)
		if !f(fd_Ballot_block_height_expiry, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_Ballot) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "uvalidator.v1.Ballot.id":
		return x.Id != ""
	case "uvalidator.v1.Ballot.ballot_type":
		return x.BallotType != 0
	case "uvalidator.v1.Ballot.eligible_voters":
		return len(x.EligibleVoters) != 0
	case "uvalidator.v1.Ballot.votes":
		return len(x.Votes) != 0
	case "uvalidator.v1.Ballot.voting_threshold":
		return x.VotingThreshold != int64(0)
	case "uvalidator.v1.Ballot.status":
		return x.Status != 0
	case "uvalidator.v1.Ballot.block_height_created":
		return x.BlockHeightCreated != int64(0)
	case "uvalidator.v1.Ballot.block_height_expiry":
		return x.BlockHeightExpiry != int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: uvalidator.v1.Ballot"))
		}
		panic(fmt.Errorf("message uvalidator.v1.Ballot does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Ballot) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "uvalidator.v1.Ballot.id":
		x.Id = ""
	case "uvalidator.v1.Ballot.ballot_type":
		x.BallotType = 0
	case "uvalidator.v1.Ballot.eligible_voters":
		x.EligibleVoters = nil
	case "uvalidator.v1.Ballot.votes":
		x.Votes = nil
	case "uvalidator.v1.Ballot.voting_threshold":
		x.VotingThreshold = int64(0)
	case "uvalidator.v1.Ballot.status":
		x.Status = 0
	case "uvalidator.v1.Ballot.block_height_created":
		x.BlockHeightCreated = int64(0)
	case "uvalidator.v1.Ballot.block_height_expiry":
		x.BlockHeightExpiry = int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: uvalidator.v1.Ballot"))
		}
		panic(fmt.Errorf("message uvalidator.v1.Ballot does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_Ballot) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "uvalidator.v1.Ballot.id":
		value := x.Id
		return protoreflect.ValueOfString(value)
	case "uvalidator.v1.Ballot.ballot_type":
		value := x.BallotType
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	case "uvalidator.v1.Ballot.eligible_voters":
		if len(x.EligibleVoters) == 0 {
			return protoreflect.ValueOfList(&_Ballot_3_list{})
		}
		listValue := &_Ballot_3_list{list: &x.EligibleVoters}
		return protoreflect.ValueOfList(listValue)
	case "uvalidator.v1.Ballot.votes":
		if len(x.Votes) == 0 {
			return protoreflect.ValueOfList(&_Ballot_4_list{})
		}
		listValue := &_Ballot_4_list{list: &x.Votes}
		return protoreflect.ValueOfList(listValue)
	case "uvalidator.v1.Ballot.voting_threshold":
		value := x.VotingThreshold
		return protoreflect.ValueOfInt64(value)
	case "uvalidator.v1.Ballot.status":
		value := x.Status
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	case "uvalidator.v1.Ballot.block_height_created":
		value := x.BlockHeightCreated
		return protoreflect.ValueOfInt64(value)
	case "uvalidator.v1.Ballot.block_height_expiry":
		value := x.BlockHeightExpiry
		return protoreflect.ValueOfInt64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: uvalidator.v1.Ballot"))
		}
		panic(fmt.Errorf("message uvalidator.v1.Ballot does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Ballot) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "uvalidator.v1.Ballot.id":
		x.Id = value.Interface().(string)
	case "uvalidator.v1.Ballot.ballot_type":
		x.BallotType = (BallotObservationType)(value.Enum())
	case "uvalidator.v1.Ballot.eligible_voters":
		lv := value.List()
		clv := lv.(*_Ballot_3_list)
		x.EligibleVoters = *clv.list
	case "uvalidator.v1.Ballot.votes":
		lv := value.List()
		clv := lv.(*_Ballot_4_list)
		x.Votes = *clv.list
	case "uvalidator.v1.Ballot.voting_threshold":
		x.VotingThreshold = value.Int()
	case "uvalidator.v1.Ballot.status":
		x.Status = (BallotStatus)(value.Enum())
	case "uvalidator.v1.Ballot.block_height_created":
		x.BlockHeightCreated = value.Int()
	case "uvalidator.v1.Ballot.block_height_expiry":
		x.BlockHeightExpiry = value.Int()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: uvalidator.v1.Ballot"))
		}
		panic(fmt.Errorf("message uvalidator.v1.Ballot does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Ballot) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "uvalidator.v1.Ballot.eligible_voters":
		if x.EligibleVoters == nil {
			x.EligibleVoters = []string{}
		}
		value := &_Ballot_3_list{list: &x.EligibleVoters}
		return protoreflect.ValueOfList(value)
	case "uvalidator.v1.Ballot.votes":
		if x.Votes == nil {
			x.Votes = []VoteResult{}
		}
		value := &_Ballot_4_list{list: &x.Votes}
		return protoreflect.ValueOfList(value)
	case "uvalidator.v1.Ballot.id":
		panic(fmt.Errorf("field id of message uvalidator.v1.Ballot is not mutable"))
	case "uvalidator.v1.Ballot.ballot_type":
		panic(fmt.Errorf("field ballot_type of message uvalidator.v1.Ballot is not mutable"))
	case "uvalidator.v1.Ballot.voting_threshold":
		panic(fmt.Errorf("field voting_threshold of message uvalidator.v1.Ballot is not mutable"))
	case "uvalidator.v1.Ballot.status":
		panic(fmt.Errorf("field status of message uvalidator.v1.Ballot is not mutable"))
	case "uvalidator.v1.Ballot.block_height_created":
		panic(fmt.Errorf("field block_height_created of message uvalidator.v1.Ballot is not mutable"))
	case "uvalidator.v1.Ballot.block_height_expiry":
		panic(fmt.Errorf("field block_height_expiry of message uvalidator.v1.Ballot is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: uvalidator.v1.Ballot"))
		}
		panic(fmt.Errorf("message uvalidator.v1.Ballot does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_Ballot) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "uvalidator.v1.Ballot.id":
		return protoreflect.ValueOfString("")
	case "uvalidator.v1.Ballot.ballot_type":
		return protoreflect.ValueOfEnum(0)
	case "uvalidator.v1.Ballot.eligible_voters":
		list := []string{}
		return protoreflect.ValueOfList(&_Ballot_3_list{list: &list})
	case "uvalidator.v1.Ballot.votes":
		list := []VoteResult{}
		return protoreflect.ValueOfList(&_Ballot_4_list{list: &list})
	case "uvalidator.v1.Ballot.voting_threshold":
		return protoreflect.ValueOfInt64(int64(0))
	case "uvalidator.v1.Ballot.status":
		return protoreflect.ValueOfEnum(0)
	case "uvalidator.v1.Ballot.block_height_created":
		return protoreflect.ValueOfInt64(int64(0))
	case "uvalidator.v1.Ballot.block_height_expiry":
		return protoreflect.ValueOfInt64(int64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: uvalidator.v1.Ballot"))
		}
		panic(fmt.Errorf("message uvalidator.v1.Ballot does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_Ballot) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in uvalidator.v1.Ballot", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_Ballot) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Ballot) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_Ballot) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_Ballot) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*Ballot)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Id)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.BallotType != 0 {
			n += 1 + runtime.Sov(uint64(x.BallotType))
		}
		if len(x.EligibleVoters) > 0 {
			for _, s := range x.EligibleVoters {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.Votes) > 0 {
			l = 0
			for _, e := range x.Votes {
				l += runtime.Sov(uint64(e))
			}
			n += 1 + runtime.Sov(uint64(l)) + l
		}
		if x.VotingThreshold != 0 {
			n += 1 + runtime.Sov(uint64(x.VotingThreshold))
		}
		if x.Status != 0 {
			n += 1 + runtime.Sov(uint64(x.Status))
		}
		if x.BlockHeightCreated != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockHeightCreated))
		}
		if x.BlockHeightExpiry != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockHeightExpiry))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*Ballot)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.BlockHeightExpiry != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockHeightExpiry))
			i--
			dAtA[i] = 0x40
		}
		if x.BlockHeightCreated != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockHeightCreated))
			i--
			dAtA[i] = 0x38
		}
		if x.Status != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Status))
			i--
			dAtA[i] = 0x30
		}
		if x.VotingThreshold != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.VotingThreshold))
			i--
			dAtA[i] = 0x28
		}
		if len(x.Votes) > 0 {
			var pksize2 int
			for _, num := range x.Votes {
				pksize2 += runtime.Sov(uint64(num))
			}
			i -= pksize2
			j1 := i
			for _, num1 := range x.Votes {
				num := uint64(num1)
				for num >= 1<<7 {
					dAtA[j1] = uint8(uint64(num)&0x7f | 0x80)
					num >>= 7
					j1++
				}
				dAtA[j1] = uint8(num)
				j1++
			}
			i = runtime.EncodeVarint(dAtA, i, uint64(pksize2))
			i--
			dAtA[i] = 0x22
		}
		if len(x.EligibleVoters) > 0 {
			for iNdEx := len(x.EligibleVoters) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.EligibleVoters[iNdEx])
				copy(dAtA[i:], x.EligibleVoters[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.EligibleVoters[iNdEx])))
				i--
				dAtA[i] = 0x1a
			}
		}
		if x.BallotType != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BallotType))
			i--
			dAtA[i] = 0x10
		}
		if len(x.Id) > 0 {
			i -= len(x.Id)
			copy(dAtA[i:], x.Id)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Id)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*Ballot)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Ballot: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Ballot: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Id = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BallotType", wireType)
				}
				x.BallotType = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BallotType |= BallotObservationType(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EligibleVoters", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.EligibleVoters = append(x.EligibleVoters, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			case 4:
				if wireType == 0 {
					var v VoteResult
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
						}
						if iNdEx >= l {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= VoteResult(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					x.Votes = append(x.Votes, v)
				} else if wireType == 2 {
					var packedLen int
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
						}
						if iNdEx >= l {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						packedLen |= int(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					if packedLen < 0 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
					}
					postIndex := iNdEx + packedLen
					if postIndex < 0 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
					}
					if postIndex > l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					var elementCount int
					if elementCount != 0 && len(x.Votes) == 0 {
						x.Votes = make([]VoteResult, 0, elementCount)
					}
					for iNdEx < postIndex {
						var v VoteResult
						for shift := uint(0); ; shift += 7 {
							if shift >= 64 {
								return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
							}
							if iNdEx >= l {
								return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
							}
							b := dAtA[iNdEx]
							iNdEx++
							v |= VoteResult(b&0x7F) << shift
							if b < 0x80 {
								break
							}
						}
						x.Votes = append(x.Votes, v)
					}
				} else {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Votes", wireType)
				}
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field VotingThreshold", wireType)
				}
				x.VotingThreshold = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.VotingThreshold |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 6:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
				}
				x.Status = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Status |= BallotStatus(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 7:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHeightCreated", wireType)
				}
				x.BlockHeightCreated = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockHeightCreated |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 8:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHeightExpiry", wireType)
				}
				x.BlockHeightExpiry = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockHeightExpiry |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: uvalidator/v1/ballot.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ---------------------------
// Ballot Status Enum
// ---------------------------
type BallotStatus int32

const (
	BallotStatus_BALLOT_STATUS_UNSPECIFIED BallotStatus = 0
	BallotStatus_BALLOT_STATUS_PENDING     BallotStatus = 1 // Ballot is collecting votes
	BallotStatus_BALLOT_STATUS_PASSED      BallotStatus = 2 // Ballot reached success threshold
	BallotStatus_BALLOT_STATUS_REJECTED    BallotStatus = 3 // Ballot reached failure threshold
	BallotStatus_BALLOT_STATUS_EXPIRED     BallotStatus = 4 // Ballot expired without quorum
)

// Enum value maps for BallotStatus.
var (
	BallotStatus_name = map[int32]string{
		0: "BALLOT_STATUS_UNSPECIFIED",
		1: "BALLOT_STATUS_PENDING",
		2: "BALLOT_STATUS_PASSED",
		3: "BALLOT_STATUS_REJECTED",
		4: "BALLOT_STATUS_EXPIRED",
	}
	BallotStatus_value = map[string]int32{
		"BALLOT_STATUS_UNSPECIFIED": 0,
		"BALLOT_STATUS_PENDING":     1,
		"BALLOT_STATUS_PASSED":      2,
		"BALLOT_STATUS_REJECTED":    3,
		"BALLOT_STATUS_EXPIRED":     4,
	}
)

func (x BallotStatus) Enum() *BallotStatus {
	p := new(BallotStatus)
	*p = x
	return p
}

func (x BallotStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BallotStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_uvalidator_v1_ballot_proto_enumTypes[0].Descriptor()
}

func (BallotStatus) Type() protoreflect.EnumType {
	return &file_uvalidator_v1_ballot_proto_enumTypes[0]
}

func (x BallotStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BallotStatus.Descriptor instead.
func (BallotStatus) EnumDescriptor() ([]byte, []int) {
	return file_uvalidator_v1_ballot_proto_rawDescGZIP(), []int{0}
}

// ---------------------------
// Ballot Observation Type
// ---------------------------
type BallotObservationType int32

const (
	BallotObservationType_BALLOT_OBSERVATION_TYPE_UNSPECIFIED BallotObservationType = 0
	BallotObservationType_BALLOT_OBSERVATION_TYPE_INBOUND_TX  BallotObservationType = 1
	BallotObservationType_BALLOT_OBSERVATION_TYPE_OUTBOUND_TX BallotObservationType = 2
)

// Enum value maps for BallotObservationType.
var (
	BallotObservationType_name = map[int32]string{
		0: "BALLOT_OBSERVATION_TYPE_UNSPECIFIED",
		1: "BALLOT_OBSERVATION_TYPE_INBOUND_TX",
		2: "BALLOT_OBSERVATION_TYPE_OUTBOUND_TX",
	}
	BallotObservationType_value = map[string]int32{
		"BALLOT_OBSERVATION_TYPE_UNSPECIFIED": 0,
		"BALLOT_OBSERVATION_TYPE_INBOUND_TX":  1,
		"BALLOT_OBSERVATION_TYPE_OUTBOUND_TX": 2,
	}
)

func (x BallotObservationType) Enum() *BallotObservationType {
	p := new(BallotObservationType)
	*p = x
	return p
}

func (x BallotObservationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BallotObservationType) Descriptor() protoreflect.EnumDescriptor {
	return file_uvalidator_v1_ballot_proto_enumTypes[1].Descriptor()
}

func (BallotObservationType) Type() protoreflect.EnumType {
	return &file_uvalidator_v1_ballot_proto_enumTypes[1]
}

func (x BallotObservationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BallotObservationType.Descriptor instead.
func (BallotObservationType) EnumDescriptor() ([]byte, []int) {
	return file_uvalidator_v1_ballot_proto_rawDescGZIP(), []int{1}
}

// ---------------------------
// Vote Result Enum
// ---------------------------
type VoteResult int32

const (
	VoteResult_VOTE_RESULT_NOT_YET_VOTED VoteResult = 0 // Default state before a vote is cast
	VoteResult_VOTE_RESULT_SUCCESS       VoteResult = 1 // Positive vote
	VoteResult_VOTE_RESULT_FAILURE       VoteResult = 2 // Negative vote
)

// Enum value maps for VoteResult.
var (
	VoteResult_name = map[int32]string{
		0: "VOTE_RESULT_NOT_YET_VOTED",
		1: "VOTE_RESULT_SUCCESS",
		2: "VOTE_RESULT_FAILURE",
	}
	VoteResult_value = map[string]int32{
		"VOTE_RESULT_NOT_YET_VOTED": 0,
		"VOTE_RESULT_SUCCESS":       1,
		"VOTE_RESULT_FAILURE":       2,
	}
)

func (x VoteResult) Enum() *VoteResult {
	p := new(VoteResult)
	*p = x
	return p
}

func (x VoteResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VoteResult) Descriptor() protoreflect.EnumDescriptor {
	return file_uvalidator_v1_ballot_proto_enumTypes[2].Descriptor()
}

func (VoteResult) Type() protoreflect.EnumType {
	return &file_uvalidator_v1_ballot_proto_enumTypes[2]
}

func (x VoteResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VoteResult.Descriptor instead.
func (VoteResult) EnumDescriptor() ([]byte, []int) {
	return file_uvalidator_v1_ballot_proto_rawDescGZIP(), []int{2}
}

// ---------------------------
// Core Ballot Message (Indexed Voting Approach)
// ---------------------------
type Ballot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 string                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                                             // Unique ID (e.g., txHash, messageHash)
	BallotType         BallotObservationType `protobuf:"varint,2,opt,name=ballot_type,json=ballotType,proto3,enum=uvalidator.v1.BallotObservationType" json:"ballot_type,omitempty"` // Type of ballot
	EligibleVoters     []string              `protobuf:"bytes,3,rep,name=eligible_voters,json=eligibleVoters,proto3" json:"eligible_voters,omitempty"`                               // Snapshot of allowed voters at creation
	Votes              []VoteResult          `protobuf:"varint,4,rep,packed,name=votes,proto3,enum=uvalidator.v1.VoteResult" json:"votes,omitempty"`                                 // Parallel array to voter_list (same index = same voter)
	VotingThreshold    int64                 `protobuf:"varint,5,opt,name=voting_threshold,json=votingThreshold,proto3" json:"voting_threshold,omitempty"`                           // Required fraction (e.g., 0.66)
	Status             BallotStatus          `protobuf:"varint,6,opt,name=status,proto3,enum=uvalidator.v1.BallotStatus" json:"status,omitempty"`                                    // Lifecycle status of the ballot
	BlockHeightCreated int64                 `protobuf:"varint,7,opt,name=block_height_created,json=blockHeightCreated,proto3" json:"block_height_created,omitempty"`                // Creation block height
	BlockHeightExpiry  int64                 `protobuf:"varint,8,opt,name=block_height_expiry,json=blockHeightExpiry,proto3" json:"block_height_expiry,omitempty"`                   // Expiry block height
}

func (x *Ballot) Reset() {
	*x = Ballot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uvalidator_v1_ballot_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ballot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ballot) ProtoMessage() {}

// Deprecated: Use Ballot.ProtoReflect.Descriptor instead.
func (*Ballot) Descriptor() ([]byte, []int) {
	return file_uvalidator_v1_ballot_proto_rawDescGZIP(), []int{0}
}

func (x *Ballot) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Ballot) GetBallotType() BallotObservationType {
	if x != nil {
		return x.BallotType
	}
	return BallotObservationType_BALLOT_OBSERVATION_TYPE_UNSPECIFIED
}

func (x *Ballot) GetEligibleVoters() []string {
	if x != nil {
		return x.EligibleVoters
	}
	return nil
}

func (x *Ballot) GetVotes() []VoteResult {
	if x != nil {
		return x.Votes
	}
	return nil
}

func (x *Ballot) GetVotingThreshold() int64 {
	if x != nil {
		return x.VotingThreshold
	}
	return 0
}

func (x *Ballot) GetStatus() BallotStatus {
	if x != nil {
		return x.Status
	}
	return BallotStatus_BALLOT_STATUS_UNSPECIFIED
}

func (x *Ballot) GetBlockHeightCreated() int64 {
	if x != nil {
		return x.BlockHeightCreated
	}
	return 0
}

func (x *Ballot) GetBlockHeightExpiry() int64 {
	if x != nil {
		return x.BlockHeightExpiry
	}
	return 0
}

var File_uvalidator_v1_ballot_proto protoreflect.FileDescriptor

var file_uvalidator_v1_ballot_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x75, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x76, 0x31, 0x2f,
	0x62, 0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x75, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x1a, 0x14, 0x67, 0x6f, 0x67,
	0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x11, 0x61, 0x6d, 0x69, 0x6e, 0x6f, 0x2f, 0x61, 0x6d, 0x69, 0x6e, 0x6f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xfb, 0x02, 0x0a, 0x06, 0x42, 0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x45, 0x0a, 0x0b, 0x62, 0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x75, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x4f, 0x62, 0x73, 0x65, 0x72,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x62, 0x61, 0x6c, 0x6c,
	0x6f, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x6c, 0x69, 0x67, 0x69, 0x62,
	0x6c, 0x65, 0x5f, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0e, 0x65, 0x6c, 0x69, 0x67, 0x69, 0x62, 0x6c, 0x65, 0x56, 0x6f, 0x74, 0x65, 0x72, 0x73, 0x12,
	0x2f, 0x0a, 0x05, 0x76, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x19,
	0x2e, 0x75, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x56,
	0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x05, 0x76, 0x6f, 0x74, 0x65, 0x73,
	0x12, 0x29, 0x0a, 0x10, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x73,
	0x68, 0x6f, 0x6c, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x76, 0x6f, 0x74, 0x69,
	0x6e, 0x67, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x33, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x75, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x6c, 0x6c,
	0x6f, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x30, 0x0a, 0x14, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x11, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x45, 0x78, 0x70, 0x69,
	0x72, 0x79, 0x2a, 0x9f, 0x01, 0x0a, 0x0c, 0x42, 0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x19, 0x42, 0x41, 0x4c, 0x4c, 0x4f, 0x54, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x42, 0x41, 0x4c, 0x4c, 0x4f, 0x54, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x18, 0x0a,
	0x14, 0x42, 0x41, 0x4c, 0x4c, 0x4f, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50,
	0x41, 0x53, 0x53, 0x45, 0x44, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x42, 0x41, 0x4c, 0x4c, 0x4f,
	0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x52, 0x45, 0x4a, 0x45, 0x43, 0x54, 0x45,
	0x44, 0x10, 0x03, 0x12, 0x19, 0x0a, 0x15, 0x42, 0x41, 0x4c, 0x4c, 0x4f, 0x54, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x10, 0x04, 0x1a, 0x04,
	0xa8, 0xa4, 0x1e, 0x01, 0x2a, 0x97, 0x01, 0x0a, 0x15, 0x42, 0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x4f,
	0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x27,
	0x0a, 0x23, 0x42, 0x41, 0x4c, 0x4c, 0x4f, 0x54, 0x5f, 0x4f, 0x42, 0x53, 0x45, 0x52, 0x56, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x26, 0x0a, 0x22, 0x42, 0x41, 0x4c, 0x4c, 0x4f,
	0x54, 0x5f, 0x4f, 0x42, 0x53, 0x45, 0x52, 0x56, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x49, 0x4e, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x5f, 0x54, 0x58, 0x10, 0x01, 0x12,
	0x27, 0x0a, 0x23, 0x42, 0x41, 0x4c, 0x4c, 0x4f, 0x54, 0x5f, 0x4f, 0x42, 0x53, 0x45, 0x52, 0x56,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4f, 0x55, 0x54, 0x42, 0x4f,
	0x55, 0x4e, 0x44, 0x5f, 0x54, 0x58, 0x10, 0x02, 0x1a, 0x04, 0xa8, 0xa4, 0x1e, 0x01, 0x2a, 0x63,
	0x0a, 0x0a, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1d, 0x0a, 0x19,
	0x56, 0x4f, 0x54, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x4e, 0x4f, 0x54, 0x5f,
	0x59, 0x45, 0x54, 0x5f, 0x56, 0x4f, 0x54, 0x45, 0x44, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x56,
	0x4f, 0x54, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45,
	0x53, 0x53, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x56, 0x4f, 0x54, 0x45, 0x5f, 0x52, 0x45, 0x53,
	0x55, 0x4c, 0x54, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52, 0x45, 0x10, 0x02, 0x1a, 0x04, 0xa8,
<<<<<<< HEAD
	0xa4, 0x1e, 0x01, 0x42, 0xba, 0x01, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x2e, 0x75, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x42, 0x0b, 0x42, 0x61, 0x6c, 0x6c, 0x6f,
	0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x43, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x75, 0x73, 0x68, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x70,
	0x75, 0x73, 0x68, 0x2d, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2d, 0x6e, 0x6f, 0x64, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x75, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x76, 0x31,
	0x3b, 0x75, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x76, 0x31, 0xa2, 0x02, 0x03,
	0x55, 0x58, 0x58, 0xaa, 0x02, 0x0d, 0x55, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72,
	0x2e, 0x56, 0x31, 0xca, 0x02, 0x0d, 0x55, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72,
	0x5c, 0x56, 0x31, 0xe2, 0x02, 0x19, 0x55, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72,
	0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea,
	0x02, 0x0e, 0x55, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x3a, 0x3a, 0x56, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
=======
	0xa4, 0x1e, 0x01, 0x42, 0xb2, 0x01, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x2e, 0x75, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x42, 0x0b, 0x42, 0x61, 0x6c, 0x6c, 0x6f,
	0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x6f, 0x6c, 0x6c, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x73, 0x2f,
	0x70, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x75, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x76, 0x31, 0x3b, 0x75, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x6f, 0x72, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x55, 0x58, 0x58, 0xaa, 0x02, 0x0d, 0x55, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0d, 0x55, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x19, 0x55, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0e, 0x55, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x6f, 0x72, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
>>>>>>> feat/universal-validator
}

var (
	file_uvalidator_v1_ballot_proto_rawDescOnce sync.Once
	file_uvalidator_v1_ballot_proto_rawDescData = file_uvalidator_v1_ballot_proto_rawDesc
)

func file_uvalidator_v1_ballot_proto_rawDescGZIP() []byte {
	file_uvalidator_v1_ballot_proto_rawDescOnce.Do(func() {
		file_uvalidator_v1_ballot_proto_rawDescData = protoimpl.X.CompressGZIP(file_uvalidator_v1_ballot_proto_rawDescData)
	})
	return file_uvalidator_v1_ballot_proto_rawDescData
}

var file_uvalidator_v1_ballot_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_uvalidator_v1_ballot_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_uvalidator_v1_ballot_proto_goTypes = []interface{}{
	(BallotStatus)(0),          // 0: uvalidator.v1.BallotStatus
	(BallotObservationType)(0), // 1: uvalidator.v1.BallotObservationType
	(VoteResult)(0),            // 2: uvalidator.v1.VoteResult
	(*Ballot)(nil),             // 3: uvalidator.v1.Ballot
}
var file_uvalidator_v1_ballot_proto_depIdxs = []int32{
	1, // 0: uvalidator.v1.Ballot.ballot_type:type_name -> uvalidator.v1.BallotObservationType
	2, // 1: uvalidator.v1.Ballot.votes:type_name -> uvalidator.v1.VoteResult
	0, // 2: uvalidator.v1.Ballot.status:type_name -> uvalidator.v1.BallotStatus
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_uvalidator_v1_ballot_proto_init() }
func file_uvalidator_v1_ballot_proto_init() {
	if File_uvalidator_v1_ballot_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_uvalidator_v1_ballot_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ballot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_uvalidator_v1_ballot_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_uvalidator_v1_ballot_proto_goTypes,
		DependencyIndexes: file_uvalidator_v1_ballot_proto_depIdxs,
		EnumInfos:         file_uvalidator_v1_ballot_proto_enumTypes,
		MessageInfos:      file_uvalidator_v1_ballot_proto_msgTypes,
	}.Build()
	File_uvalidator_v1_ballot_proto = out.File
	file_uvalidator_v1_ballot_proto_rawDesc = nil
	file_uvalidator_v1_ballot_proto_goTypes = nil
	file_uvalidator_v1_ballot_proto_depIdxs = nil
}
